<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.wl4g</groupId>
	<artifactId>escg</artifactId>
	<version>1.0.0</version>
	<packaging>jar</packaging>
	<name>Enhance Spring Cloud Gateway</name>
	<url>http://escg.wl4g.com</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<infra.version>3.1.26</infra.version>
		<shell.version>3.5.1</shell.version>
		<!-- Spring -->
		<spring-boot.version>2.7.3</spring-boot.version>
		<spring-cloud-dependencies.version>2021.0.2</spring-cloud-dependencies.version>
		<spring-cloud-gateway.version>3.1.2</spring-cloud-gateway.version>
		<reactor-netty.version>2.6.7</reactor-netty.version>
		<reactor-extra.version>3.4.8</reactor-extra.version>
		<reactor-core.version>3.4.17</reactor-core.version>
		<commons-lang.version>2.6</commons-lang.version>
		<!-- Trace -->
		<spring-cloud-sleuth-otel.version>1.1.0</spring-cloud-sleuth-otel.version>
		<opentelemetry.version>1.14.0</opentelemetry.version>
		<opentelemetry-semconv.version>1.14.0-alpha</opentelemetry-semconv.version>
		<grpc.version>1.43.0</grpc.version>
		<spring-sleuth-otel.version>1.1.0</spring-sleuth-otel.version>
		<!-- Native -->
		<graalvm.version>21.3.0</graalvm.version>
		<spring-native.version>0.11.5</spring-native.version>
		<native-maven-plugin.version>0.9.11</native-maven-plugin.version>
		<!-- Maven plugins -->
		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
		<maven-versions-plugin.version>2.8.1</maven-versions-plugin.version>
		<maven-source-plugin.version>3.0.1</maven-source-plugin.version>
		<maven-resources-plugin.version>3.2.0</maven-resources-plugin.version>
		<maven-jar-plugin.version>2.6</maven-jar-plugin.version>
		<maven-shade-plugin.version>3.2.1</maven-shade-plugin.version>
		<maven-dependency-plugin.version>3.1.1</maven-dependency-plugin.version>
		<maven-assembly-plugin.version>3.3.0</maven-assembly-plugin.version>
		<maven-release-plugin.version>2.5.3</maven-release-plugin.version>
		<maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
		<dockerfile-maven-plugin.version>1.4.9</dockerfile-maven-plugin.version>
		<proguard-maven-plugin.version>2.1.1</proguard-maven-plugin.version>
		<mybatis-generator-maven-plugin.version>1.3.2</mybatis-generator-maven-plugin.version>
		<nexus-staging-maven-plugin.version>1.6.3</nexus-staging-maven-plugin.version>
		<minify-maven-plugin.version>1.7.6</minify-maven-plugin.version>
		<maven-checkstyle-plugin.version>3.1.1</maven-checkstyle-plugin.version>
		<maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
		<maven-gpg-plugin.version>1.6</maven-gpg-plugin.version>
		<bootstrap-classname>com.wl4g.IamGateway</bootstrap-classname>
		<final.name>escg</final.name>
	</properties>
	<!-- see:https://swenfang.github.io/2018/06/03/Maven-Priority/ -->
	<repositories>
		<repository>
			<id>public</id>
			<name>Aliyun maven public</name>
			<url>https://maven.aliyun.com/repository/public</url>
		</repository>
		<repository>
			<id>grails-core</id>
			<name>Aliyun maven grails core</name>
			<url>https://maven.aliyun.com/repository/grails-core</url>
		</repository>
		<repository>
			<id>central</id>
			<name>Aliyun maven central</name>
			<url>https://maven.aliyun.com/repository/central</url>
		</repository>
		<repository>
			<id>spring</id>
			<name>Aliyun maven spring</name>
			<url>https://maven.aliyun.com/repository/spring</url>
		</repository>
		<repository>
			<id>spring-release</id>
			<name>Spring release</name>
			<url>https://repo.spring.io/release</url>
		</repository>
		<repository>
			<id>google</id>
			<name>Aliyun maven google</name>
			<url>https://maven.aliyun.com/repository/google</url>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<url>https://repo.spring.io/milestone</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>public</id>
			<name>Aliyun maven public</name>
			<url>https://maven.aliyun.com/repository/public</url>
		</pluginRepository>
		<pluginRepository>
			<id>grails-core</id>
			<name>Aliyun maven grails core</name>
			<url>https://maven.aliyun.com/repository/grails-core</url>
		</pluginRepository>
		<pluginRepository>
			<id>central</id>
			<name>Aliyun maven central</name>
			<url>https://maven.aliyun.com/repository/central</url>
		</pluginRepository>
		<pluginRepository>
			<id>spring</id>
			<name>Aliyun maven spring</name>
			<url>https://maven.aliyun.com/repository/spring</url>
		</pluginRepository>
		<pluginRepository>
			<id>spring-release</id>
			<name>Spring release</name>
			<url>https://repo.spring.io/release</url>
		</pluginRepository>
		<pluginRepository>
			<id>google</id>
			<name>Aliyun maven google</name>
			<url>https://maven.aliyun.com/repository/google</url>
		</pluginRepository>
		<pluginRepository>
			<id>spring-milestones</id>
			<url>https://repo.spring.io/milestone</url>
		</pluginRepository>
	</pluginRepositories>
	<dependencyManagement>
		<dependencies>
			<!-- Infra modules -->
			<dependency>
			    <groupId>com.wl4g</groupId>
			    <artifactId>infra-parent</artifactId>
			    <version>${infra.version}</version>
			    <type>pom</type>
			    <scope>import</scope>
			</dependency>
			<dependency>
			    <groupId>com.wl4g</groupId>
			    <artifactId>infra-bom</artifactId>
			    <version>${infra.version}</version>
			    <type>pom</type>
			    <scope>import</scope>
			</dependency>
			<dependency>
			    <groupId>com.wl4g</groupId>
			    <artifactId>infra-common</artifactId>
			    <version>${infra.version}</version>
			</dependency>
			<dependency>
			    <groupId>com.wl4g</groupId>
			    <artifactId>infra-common-java11</artifactId>
			    <version>${infra.version}</version>
			</dependency>
			<dependency>
			    <groupId>com.wl4g</groupId>
			    <artifactId>infra-context</artifactId>
			    <version>${infra.version}</version>
			</dependency>
			<dependency>
			    <groupId>com.wl4g</groupId>
			    <artifactId>infra-core</artifactId>
			    <version>${infra.version}</version>
			</dependency>
			<dependency>
			    <groupId>com.wl4g</groupId>
			    <artifactId>infra-data</artifactId>
			    <version>${infra.version}</version>
			</dependency>
			<dependency>
			    <groupId>com.wl4g</groupId>
			    <artifactId>infra-support</artifactId>
			    <version>${infra.version}</version>
			</dependency>
			<dependency>
			    <groupId>com.wl4g</groupId>
			    <artifactId>infra-integration</artifactId>
			    <version>${infra.version}</version>
			    <type>pom</type>
			</dependency>
			<dependency>
			    <groupId>com.wl4g</groupId>
			    <artifactId>infra-integration-feign-common</artifactId>
			    <version>${infra.version}</version>
			</dependency>
			<dependency>
			    <groupId>com.wl4g</groupId>
			    <artifactId>infra-integration-feign-core</artifactId>
			    <version>${infra.version}</version>
			</dependency>
			<dependency>
			    <groupId>com.wl4g</groupId>
			    <artifactId>infra-integration-feign-istio</artifactId>
			    <version>${infra.version}</version>
			</dependency>
			<dependency>
			    <groupId>com.wl4g</groupId>
			    <artifactId>infra-integration-feign-springcloud</artifactId>
			    <version>${infra.version}</version>
			</dependency>
			<dependency>
			    <groupId>com.wl4g</groupId>
			    <artifactId>infra-integration-feign-dubbo</artifactId>
			    <version>${infra.version}</version>
			</dependency>
			<dependency>
			    <groupId>com.wl4g</groupId>
			    <artifactId>shell-bom</artifactId>
			    <version>${shell.version}</version>
			    <type>pom</type>
			    <scope>import</scope>
			</dependency>
			<!-- Trace -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-sleuth-otel-autoconfigure</artifactId>
			    <version>${spring-cloud-sleuth-otel.version}</version>
			</dependency>
			<!-- Opentelemetry -->
			<dependency>
			    <groupId>io.opentelemetry</groupId>
			    <artifactId>opentelemetry-bom</artifactId>
			    <version>${opentelemetry.version}</version>
			    <type>pom</type>
			    <scope>import</scope>
			</dependency>
			<dependency>
			    <groupId>io.opentelemetry</groupId>
			    <artifactId>opentelemetry-api</artifactId>
			    <version>${opentelemetry.version}</version>
			</dependency>
			<dependency>
			    <groupId>io.opentelemetry</groupId>
			    <artifactId>opentelemetry-sdk</artifactId>
			    <version>${opentelemetry.version}</version>
			</dependency>
			<dependency>
			    <groupId>io.opentelemetry</groupId>
			    <artifactId>opentelemetry-exporter-otlp</artifactId>
			    <version>${opentelemetry.version}</version>
			</dependency>
			<dependency>
			    <groupId>io.opentelemetry</groupId>
			    <artifactId>opentelemetry-exporter-jaeger</artifactId>
			    <version>${opentelemetry.version}</version>
			</dependency>
			<dependency>
			    <groupId>io.opentelemetry</groupId>
			    <artifactId>opentelemetry-exporter-zipkin</artifactId>
			    <version>${opentelemetry.version}</version>
			</dependency>
			<dependency>
			    <groupId>io.opentelemetry</groupId>
			    <artifactId>opentelemetry-semconv</artifactId>
			    <version>${opentelemetry-semconv.version}</version>
			</dependency>
			<dependency>
			    <groupId>io.grpc</groupId>
			    <artifactId>grpc-protobuf</artifactId>
			    <version>${grpc-protobuf.version}</version>
			</dependency>
			<dependency>
			    <groupId>io.grpc</groupId>
			    <artifactId>grpc-okhttp</artifactId>
			    <version>${grpc.version}</version>
			</dependency>
			<dependency>
			    <groupId>io.grpc</groupId>
			    <artifactId>grpc-netty-shaded</artifactId>
			    <version>${grpc.version}</version>
			</dependency>
			<dependency>
			    <groupId>org.springframework.boot</groupId>
			    <artifactId>spring-boot-dependencies</artifactId>
			    <version>${spring-boot.version}</version>
			    <type>pom</type>
			    <scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud-dependencies.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- Gateway -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-gateway-dependencies</artifactId>
				<version>${spring-cloud-gateway.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-gateway</artifactId>
				<version>${spring-cloud-gateway.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-gateway-server</artifactId>
				<version>${spring-cloud-gateway.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-reactor-netty</artifactId>
				<version>${reactor-netty.version}</version>
			</dependency>
			<dependency>
				<groupId>io.projectreactor.addons</groupId>
				<artifactId>reactor-extra</artifactId>
				<version>${reactor-extra.version}</version>
			</dependency>
			<dependency>
				<groupId>io.projectreactor</groupId>
				<artifactId>reactor-core</artifactId>
				<version>${reactor-core.version}</version>
			</dependency>
			<!-- Fix conflict for resilience4j circuitbreaker -->
			<dependency>
				<groupId>io.github.resilience4j</groupId>
				<artifactId>resilience4j-spring-boot2</artifactId>
				<version>1.7.0</version>
			</dependency>
			<!-- Kubernetes(version conflict resolved) -->
			<dependency>
				<groupId>io.kubernetes</groupId>
				<artifactId>client-java</artifactId>
				<version>13.0.2</version>
			</dependency>
			<dependency>
				<groupId>io.kubernetes</groupId>
				<artifactId>client-java-api</artifactId>
				<version>13.0.2</version>
			</dependency>
			<dependency>
				<groupId>io.kubernetes</groupId>
				<artifactId>client-java-extended</artifactId>
				<version>13.0.2</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<!-- <dependency> -->
		<!-- <groupId>com.wl4g</groupId> -->
		<!-- <artifactId>shell-cli</artifactId> -->
		<!-- </dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>com.wl4g</groupId> -->
		<!-- <artifactId>shell-springboot</artifactId> -->
		<!-- </dependency> -->
		<dependency>
			<groupId>com.wl4g</groupId>
			<artifactId>infra-core</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-web</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Core Foundation -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-gateway</artifactId>
			<exclusions>
				<exclusion>
					<groupId>io.netty</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Kubernetes -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-kubernetes-client-discovery</artifactId>
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-all</artifactId>
		</dependency>
		<!-- see:io.netty.handler.ssl.SslContext#defaultProvider -->
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-tcnative-boringssl-static</artifactId>
		</dependency>
		<!-- Redis -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis-reactive</artifactId>
			<exclusions>
				<exclusion>
					<groupId>io.netty</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- EhCache -->
		<dependency>
			<groupId>org.ehcache</groupId>
			<artifactId>ehcache</artifactId>
		</dependency>
		<!-- Commons Utility -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-pool2</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>${commons-lang.version}</version>
		</dependency>
		<!-- Security -->
		<!-- <dependency> -->
		<!-- <groupId>org.springframework.boot</groupId> -->
		<!-- <artifactId>spring-boot-starter-security</artifactId> -->
		<!-- </dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>org.springframework.security</groupId> -->
		<!-- <artifactId>spring-security-oauth2-client</artifactId> -->
		<!-- </dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>org.springframework.security</groupId> -->
		<!-- <artifactId>spring-security-oauth2-jose</artifactId> -->
		<!-- </dependency> -->
		<!-- Admin -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!-- Webflux bridge for servlet -->
		<!-- <dependency> -->
		<!-- <groupId>javax.servlet</groupId> -->
		<!-- <artifactId>javax.servlet-api</artifactId> -->
		<!-- </dependency> -->
		<dependency>
			<groupId>io.grpc</groupId>
			<artifactId>grpc-netty-shaded</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-sleuth</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.cloud</groupId>
					<artifactId>spring-cloud-sleuth-brave</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-sleuth-otel-autoconfigure</artifactId>
		</dependency>
		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-exporter-otlp</artifactId>
		</dependency>
		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-exporter-otlp-trace</artifactId>
		</dependency>
		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-exporter-jaeger</artifactId>
		</dependency>
		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-exporter-jaeger-proto</artifactId>
		</dependency>
		<!-- Metrics -->
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>
		<!-- CircuitBreaker -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-circuitbreaker-reactor-resilience4j</artifactId>
		</dependency>
		<!-- see:https://cloud.spring.io/spring-cloud-circuitbreaker/reference/html/spring-cloud-circuitbreaker.html#collecting-metrics -->
		<dependency>
			<groupId>io.github.resilience4j</groupId>
			<artifactId>resilience4j-micrometer</artifactId>
			<!-- <version>1.7.1</version> -->
		</dependency>
		<!-- LoadBalancer -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-loadbalancer</artifactId>
		</dependency>
		<!-- Netflix -->
		<!-- <dependency> -->
		<!-- <groupId>org.springframework.cloud</groupId> -->
		<!-- <artifactId>spring-cloud-starter-netflix-hystrix</artifactId> -->
		<!-- </dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>org.springframework.cloud</groupId> -->
		<!-- <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId> -->
		<!-- </dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>org.springframework.cloud</groupId> -->
		<!-- <artifactId>spring-cloud-starter-netflix-ribbon</artifactId> -->
		<!-- </dependency> -->
		<!-- Nacos -->
		<!-- <dependency> -->
		<!-- <groupId>com.alibaba.cloud</groupId> -->
		<!-- <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId> -->
		<!-- </dependency> -->
		<!-- <dependency> -->
		<!-- <groupId>com.alibaba.cloud</groupId> -->
		<!-- <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId> -->
		<!-- </dependency> -->
		<!-- Native image -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-indexer</artifactId>
		</dependency>
		<!-- Tests -->
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-launcher</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- The test engine used in JUnit 5 -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- The test engine used in JUnit 4 -->
		<!-- <dependency> -->
		<!-- <groupId>org.junit.vintage</groupId> -->
		<!-- <artifactId>junit-vintage-engine</artifactId> -->
		<!-- <scope>test</scope> -->
		<!-- </dependency> -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<finalName>${final.name}</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<!-- When true and will check file encoding, causes the picture file copy to fail. -->
				<filtering>false</filtering>
                <!-- <excludes>-->
                <!-- 	<exclude>*.yml</exclude>-->
                <!-- 	<exclude>*.yaml</exclude>-->
                <!-- </excludes>-->
			</resource>
		</resources>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>${maven-versions-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven-source-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>${maven-shade-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${maven-dependency-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${maven-assembly-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>${maven-release-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>dockerfile-maven-plugin</artifactId>
					<version>${dockerfile-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.github.wvengen</groupId>
					<artifactId>proguard-maven-plugin</artifactId>
					<version>${proguard-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.mybatis.generator</groupId>
					<artifactId>mybatis-generator-maven-plugin</artifactId>
					<version>${mybatis-generator-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.sonatype.plugins</groupId>
					<artifactId>nexus-staging-maven-plugin</artifactId>
					<version>${nexus-staging-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.samaxes.maven</groupId>
					<artifactId>minify-maven-plugin</artifactId>
					<version>${minify-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${maven-checkstyle-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven-deploy-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>${maven-gpg-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring-boot.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<!-- issue:https://stackoverflow.com/questions/64699000/javabeanexecutable-hv000254-missing-parameter-metadata-for-java-enum -->
					<parameters>true</parameters>
					<compilerArgs>
						<compilerArg>-sourcepath</compilerArg>
						<compilerArg>${project.basedir}/target/generated-sources/annotations${path.separator}/</compilerArg>
					</compilerArgs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<includes>
						<include>**/*Tests.java</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<configuration>
					<configLocation>/../tools/checkstyle/google_checks.xml</configLocation>
				</configuration>
				<executions>
					<!-- Solutions to maven checkstyle errors in Eclipse: https://gitee.com/wl4g/blogs/blob/master/articles/maven.checkstyle-eclipse-error/README_CN.md -->
					<!-- <execution> -->
					<!-- <id>checkstyle</id> -->
					<!-- <phase>validate</phase> -->
					<!-- <goals> -->
					<!-- <goal>check</goal> -->
					<!-- </goals> -->
					<!-- <configuration> -->
					<!-- <failOnViolation>true</failOnViolation> -->
					<!-- </configuration> -->
					<!-- </execution> -->
				</executions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>build:tar</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<configuration>
							<finalName>${final.name}-${project.version}-bin</finalName>
							<appendAssemblyId>false</appendAssemblyId>
							<descriptors>
								<descriptor>src/main/assemble/package.xml</descriptor>
							</descriptors>
						</configuration>
						<executions>
							<execution>
								<id>make-assembly</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>build:springjar</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<mainClass>${bootstrap-classname}</mainClass>
							<finalName>${final.name}-${project.version}-bin</finalName>
							<!-- for using: java -cp myapp.jar -Dloader.main=com.MyApp org.springframework.boot.loader.PropertiesLauncher -->
							<!-- @see:https://www.baeldung.com/spring-boot-main-class -->
							<!-- @see:https://www.jianshu.com/p/66a101c85485 -->
							<layout>ZIP</layout>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>repackage</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>build:native</id>
			<dependencies>
				<!-- Note: minimum requirement jdk11+ -->
				<dependency>
					<groupId>org.springframework.experimental</groupId>
					<artifactId>spring-native</artifactId>
					<version>${spring-native.version}</version>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.graalvm.buildtools</groupId>
						<artifactId>native-maven-plugin</artifactId>
						<version>${native-maven-plugin.version}</version>
						<configuration>
							<skip>false</skip>
							<imageName>${project.artifactId}</imageName>
							<mainClass>${bootstrap-classname}</mainClass>
							<buildArgs>
								-H:+ReportExceptionStackTraces
								--verbose
								--static
								--no-fallback
								--report-unsupported-elements-at-runtime
								--initialize-at-build-time=org.springframework.util.unit.DataSize
							</buildArgs>
						</configuration>
						<extensions>true</extensions>
						<executions>
							<execution>
								<goals>
									<goal>build</goal>
								</goals>
								<phase>package</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.graalvm.nativeimage</groupId>
						<artifactId>native-image-maven-plugin</artifactId>
						<version>21.2.0</version>
						<configuration>
							<mainClass>${bootstrap-classname}</mainClass>
							<!-- see:https://docs.spring.io/spring-native/docs/current/reference/htmlsingle/#native-image-options-useful -->
							<!-- Unsupported options: -initialize-at-build-time=org.springframework.util.unit.DataSize, without class or package specified is not 
								supported since Spring Native for GraalVM is designed to work with runtime class initialization by default (a selected set of classes are enabled 
								at buildtime). -->
							<buildArgs>
								-H:+ReportExceptionStackTraces
								-H:+PrintAnalysisCallTree
								-H:+PrintClassInitialization
								-H:Log=registerResource:3
								--verbose
								--static
								--no-fallback
								--allow-incomplete-classpath
								--report-unsupported-elements-at-runtime
								--install-exit-handlers
							</buildArgs>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>native-image</goal>
								</goals>
								<phase>package</phase>
							</execution>
						</executions>
					</plugin>
					<!-- see:https://docs.spring.io/spring-native/docs/current/reference/htmlsingle/#aot-build-setup-configuration -->
					<plugin>
						<groupId>org.springframework.experimental</groupId>
						<artifactId>spring-aot-maven-plugin</artifactId>
						<version>${spring-native.version}</version>
						<configuration>
							<mainClass>${bootstrap-classname}</mainClass>
							<mode>native</mode>
							<removeSpelSupport>false</removeSpelSupport>
						</configuration>
						<executions>
							<execution>
								<id>generate</id>
								<goals>
									<goal>generate</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<image>
								<buildpacks>
									<buildpack>gcr.io/paketo-buildpacks/java-native-image:${graalvm.version}</buildpack>
								</buildpacks>
							</image>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>build:tar:docker</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<configuration>
							<finalName>${final.name}-${project.version}-bin</finalName>
							<appendAssemblyId>false</appendAssemblyId>
							<descriptors>
								<descriptor>src/main/assemble/package.xml</descriptor>
							</descriptors>
						</configuration>
						<executions>
							<execution>
								<id>make-assembly</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<!-- Usages examples: -->
					<!-- export DOCKER_HOST=tcp://localhost:2375 -->
					<!-- [build]: mvn -Pbuild:tar:docker -->
					<!-- [push]: mvn -Pbuild:tar:docker -->
					<!-- [push]: mvn -Pbuild:tar:docker dockerfile:build dockerfile:push -Ddockerfile.username=wl4g -Ddockerfile.password=xxx -->
					<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>dockerfile-maven-plugin</artifactId>
						<version>1.4.13</version>
						<executions>
							<execution>
								<id>default</id>
								<goals>
									<goal>build</goal>
									<!-- <goal>push</goal> -->
								</goals>
							</execution>
						</executions>
						<configuration>
							<!-- see:https://github.com/spotify/dockerfile-maven/issues/154 -->
							<contextDirectory>${project.basedir}</contextDirectory>
							<dockerfile>${project.basedir}/build/docker/Dockerfile</dockerfile>
							<repository>wl4g/${project.build.finalName}</repository>
							<useMavenSettingsForAuth>true</useMavenSettingsForAuth>
							<tag>${project.version}</tag>
							<readTimeoutMillis>60000</readTimeoutMillis>
							<connectTimeoutMillis>20000</connectTimeoutMillis>
							<buildArgs>
								<APP_NAME>${project.build.finalName}</APP_NAME>
								<APP_VERSION>${project.version}</APP_VERSION>
								<APP_MAINCLASS>${bootstrap-classname}</APP_MAINCLASS>
							</buildArgs>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<!-- Source -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>jar-no-fork</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<!-- Javadoc -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<additionalOptions>-Xdoclint:none</additionalOptions> <!-- 3.0.0+ -->
									<!-- <additionalparam>-Xdoclint:none</additionalparam> --> <!-- 2.0.0 -->
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- GPG -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<executions>
							<execution>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
						<extensions>true</extensions>
						<configuration>
							<serverId>sonatype-nexus-staging</serverId>
							<nexusUrl>https://oss.sonatype.org/</nexusUrl>
							<autoReleaseAfterClose>true</autoReleaseAfterClose>
							<stagingProgressTimeoutMinutes>15</stagingProgressTimeoutMinutes>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<distributionManagement>
				<snapshotRepository>
					<id>sonatype-nexus-snapshots</id>
					<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
				</snapshotRepository>
				<repository>
					<id>sonatype-nexus-staging</id>
					<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
				</repository>
			</distributionManagement>
		</profile>
	</profiles>
</project>