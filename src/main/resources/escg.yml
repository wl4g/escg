# Copyright (c) 2017 ~ 2025, the original author wangl.sir individual Inc,
# All rights reserved. Contact us <Wanglsir@gmail.com, 983708408@qq.com>
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
## #### IAM Gateway Configuration. ####
#
spring:
  application.name: iam-gateway
  banner:
    location: classpath:META-INF/banner.txt
  ## The SpringBoot2.4+ use following configuration.
  ## see:https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-Config-Data-Migration-Guide
  config:
    ## see:https://docs.spring.io/spring-boot/docs/2.6.7/reference/htmlsingle/#features.external-config.files.importing
    import: optional:classpath:iam-gateway.yml
  #  use-legacy-processing: true
  #  activate:
  #    on-profile:
  #      - dev
  #      - production
  profiles:
    include: route ## examples has: discovery,route-splitting,route-composite
    active: dev
  main:
    allow-circular-references: true
  freemarker:
    checkTemplateLocation: false
  ## see:https://reflectoring.io/spring-boot-tracing/
  ## The entry of bind attrs to reactor context see:org.springframework.cloud.sleuth.instrument.reactor.ReactorSleuth#runMonoSupplierInScope()
  sleuth:
    enabled: true
    ## see:org.springframework.cloud.sleuth.autoconfig.instrument.web.TraceWebFluxConfiguration
    ## see:org.springframework.cloud.sleuth.autoconfig.instrument.web.SleuthWebProperties
    web:
      ## [Note]: In order to use canary tracking instead of the original TraceWebFilter, that must be turned off.
      ## see:com.wl4g.iam.gateway.trace.config.GrayTraceAutoConfiguration#canaryTraceWebFilter()
      enabled: false
      #skipPattern:
      #filterOrder:
      #ignoreAutoConfiguredSkipPatterns: false
    ### see:org.springframework.cloud.sleuth.autoconfig.brave.SleuthProperties
    #traceId128: false
    #supportsJoin: false
    ### see:org.springframework.cloud.sleuth.autoconfig.SleuthOpentracingProperties
    #opentracing:
    #  enabled: true
    ### see:org.springframework.cloud.sleuth.autoconfig.brave.ConditionalOnBraveEnabled
    ### see:org.springframework.cloud.sleuth.autoconfig.SleuthTracerProperties
    #tracer:
    #  mode: AUTO
    ### see:org.springframework.cloud.sleuth.autoconfig.brave.SamplerProperties
    #sampler:
    #  probability: 
    #  rate: 10
    ### see:org.springframework.cloud.sleuth.autoconfig.brave.instrument.grpc.BraveGrpcAutoConfiguration
    #grpc:
    #  enabled: true
    #zipkin:
    #  #sender: WEB ## Default by null, options(WEB|KAFKA|...)
    ## see:org.springframework.cloud.sleuth.autoconfig.otel.SleuthPropagationProperties
    propagation:
      type: [B3,AWS,JAEGER,OT_TRACER,W3C] ## Default by B3, options(B3|AWS|JAEGER|W3C|OT_TRACER|CUSTOM)
      tag.enabled: true
    ## see:org.springframework.cloud.sleuth.autoconfig.SleuthBaggageProperties
    ## see:https://docs.spring.io/spring-cloud-sleuth/docs/3.1.1/reference/htmlsingle/#features-baggage
    baggage:
      ## Enables correlating the baggage context with logging contexts.
      correlationEnabled: true
      ## List of fields that should be propagated over the wire.
      correlationFields: principal
      ## List of fields that should automatically become tags.
      tagFields:
        - x-request-id
        - principal
        - region-code
      ## List of fields that should be accessible within the JVM process but not propagated over the wire.
      localFields:
        - x-request-id
        - principal
        - region-code
      ## List of fields that are referenced the same in-process as it is on the wire. For example, the field "x-vcap-request-id" would be set as-is including the prefix.
      remoteFields:
        - x-request-id
        - principal
        - region-code
    otel:
      ## see:org.springframework.cloud.sleuth.autoconfig.otel.OtelProperties
      config:
        ## Instrumentation name to be used to find a Tracer.
        instrumentationName: "org.springframework.cloud.spring-cloud-sleuth"
        ## Instrumentation version to be used to find a Tracer.
        #instrumentationVersion
        ## Sets the global default {@code Sampler} value.
        traceIdRatioBased: 1d ## Default by 0.1
        ## Returns the global default max number of attributes per {@link Span}.
        maxAttrs: 128 ## Default by 128
        ## Returns the global default max number of events per {@link Span}.
        maxEvents: 128 ## Default by 128
        ## Returns the global default max number of link entries per {@link Span}.
        maxLinks: 128 ## Default by 128
        ## Returns the global default max number of attributes per event.
        maxEventAttrs: 128 ## Default by 128
        ## Returns the global default max number of attributes per link.
        maxLinkAttrs: 128 ## Default by 128
      resource:
        enabled: true
      ## see:org.springframework.cloud.sleuth.autoconfig.otel.OtelPropagationProperties
      ## see:org.springframework.cloud.sleuth.otel.propagation.CompositeTextMapPropagator
      propagation:
        ## see:Enables default B3 Sleuth Baggage propagation. This will be automatically turned on when B3 propagation type gets picked.
        sleuthBaggage.enabled: true
        ## see:org.springframework.cloud.sleuth.autoconfig.otel.OtelPropagationConfiguration.PropagatorsConfiguration
        compositeTextMapPropagator.enabled: true
      ## see:org.springframework.cloud.sleuth.autoconfig.otel.OtelLogConfiguration
      ## see:org.springframework.cloud.sleuth.autoconfig.otel.OtelLogProperties
      ## The scope fields into MDC see:org.springframework.cloud.sleuth.otel.bridge.Slf4jBaggageApplicationListener#onScopeAttached()
      log:
        exporter.enabled: true ## Default by false
        slf4j.enabled: true ## Default by false
      ## see:org.springframework.cloud.sleuth.autoconfig.otel.OtelProcessorProperties
      processor:
        batch:
          ## The interval, in milliseconds, between two consecutive exports. Default is 5000.
          scheduleDelay: 5000
          ## The maximum queue size. Default is 2048.
          maxQueueSize: 2048
          ## The maximum batch size. Default is 512.
          maxExportBatchSize: 512
          ## The maximum allowed time, in milliseconds, to export data. Default is 30000.
          exporterTimeout: 30000
      ## see:org.springframework.cloud.sleuth.autoconfig.otel.OtelExporterProperties
      exporter:
        sleuthSpanFilter.enabled: true
        #otlp:
        #  endpoint: http://localhost:4317
        #  timeout: 10000
        jaeger:
          endpoint: http://localhost:14250
          timeout: 10000
  ## Solve the problem of 'DataBufferLimitException: Exceeded limit on max bytes to buffer : 262144',
  ## but the lower version is invalid.
  ## see:https://github.com/spring-cloud/spring-cloud-gateway/issues/1924
  ## see:https://github.com/spring-cloud/spring-cloud-gateway/issues/1793
  ## see:https://github.com/spring-cloud/spring-cloud-gateway/issues/1596
  #codec.max-in-memory-size: 102400000
  cloud:
    ## see:https://github.com/spring-cloud/spring-cloud-gateway/issues/1370
    circuitbreaker:
      ## see:https://cloud.spring.io/spring-cloud-circuitbreaker/reference/html/spring-cloud-circuitbreaker.html
      ## see:org.springframework.cloud.circuitbreaker.resilience4j.Resilience4JAutoConfiguration
      resilience4j:
        enabled: true
    loadbalancer:
      use404: false ## Default by false
    ## see:org.springframework.cloud.gateway.config.GatewayAutoConfiguration
    ## see:org.springframework.cloud.gateway.config.GatewayProperties
    ## see:org.springframework.cloud.gateway.handler.FilteringWebHandler#handle()
    ## see:https://cloud.spring.io/spring-cloud-static/spring-cloud-gateway/2.0.0.RELEASE/single/spring-cloud-gateway.html#_requestratelimiter_gatewayfilter_factory
    ## see:https://github.com/eugenp/tutorials/blob/master/spring-cloud/spring-cloud-gateway/src/main/resources/application-webfilters.yml
    ## see:https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/appendix.html
    gateway:
      x-forwarded: ## see:org.springframework.cloud.gateway.filter.headers.XForwardedHeadersFilter
        ## [Note]: Note: If the fallbackURI must not be set to '/', otherwise when the circuit breaker is enabled, since the addition of the
        ## 'x-forward' and 'forwarded' headers is enabled by default, when all backend service instances are unreachable, a large number of 
        ## repetitions will be added header, the client eventually responds with a 413 error.
        enabled: true ## Default by true
        forEnabled: true ## Add for X-Forwarded-For, Default by true
        hostEnabled: true ## true ## Add for X-Forwarded-Host, Default by true
        portEnabled: true ## true ## Add for X-Forwarded-Port, Default by true
        protoEnabled: true ## true ## Add for X-Forwarded-Proto, Default by true
        prefixEnabled: true ## true ## Add for X-Forwarded-Prefix, Default by true
        forAppend: true ## Add for X-Forwarded-For list, Default by true
        hostAppend: true ## Add for X-Forwarded-Host list, Default by true
        portAppend: true ## Add for X-Forwarded-Port list, Default by true
        protoAppend: true ## Add for X-Forwarded-Proto list, Default by true
        prefixAppend: true ## Add for X-Forwarded-Prefix list, Default by true
      ## see:org.springframework.cloud.gateway.config.GlobalCorsProperties
      #globalcors:
      #  cors-configurations: ## Default no set.
      fail-on-route-definition-error: true ## Default by true
      filter:
        remove-hop-by-hop:
          headers: ["connection","keep-alive","transfer-encoding","te","trailer","proxy-authorization","proxy-authenticate","x-application-context","upgrade"]
        secure-headers:
          disable: ## Default no set.
          referrer-policy: 'no-referrer' ## Default by 'no-referrer'
          strict-transport-security: 'max-age=631138519' ## Default by 'max-age=631138519'
          xss-protection-header: '1 ; mode=block' ## Default by '1 ; mode=block'
          permitted-cross-domain-policies: none ## Default by 'none'
          frame-options: DENY ## Default by 'DENY'
          download-options: noopen ## Default by 'noopen'
        ## !!! [Deprecated]: use 'spring.iam.gateway.ratelimit' !!!
        ## The default request ratelimiter configuragion.
        ## see:org.springframework.cloud.gateway.filter.factory.RequestRateLimiterGatewayFilterFactory#apply()
        ##request-rate-limiter:
        ##  denyEmptyKey: true
        ##  emptyKeyStatusCode: UNPROCESSABLE_ENTITY
      ## !!! [Deprecated]: use 'spring.iam.gateway.ratelimit' !!!
      ## The default based redis ratelimiter configuragion.
      ## see:org.springframework.cloud.gateway.config.GatewayRedisAutoConfiguration#redisRateLimiter
      ## see:org.springframework.cloud.gateway.filter.ratelimit.RedisRateLimiter
      ##redis-rate-limiter:
      ##  include-headers: false ## Default by true
      ##  burst-capacity-header: X-Escg-RateLimit-Burst-Capacity ## Default by 'X-RateLimit-Burst-Capacity'
      ##  remaining-header: X-Escg-RateLimit-Remaining ## Default by 'X-RateLimit-Remaining'
      ##  replenish-rate-header: X-Escg-RateLimit-Replenish-Rate ## Default by 'X-RateLimit-Replenish-Rate'
      ##  requested-tokens-header: X-Escg-RateLimit-Requested-Tokens ## Default by 'X-RateLimit-Requested-Tokens'
      httpserver:
        wiretap: false ## Default by false
      httpclient: ## see:org.springframework.cloud.gateway.config.HttpClientProperties
        compression: false ## Default by false
        wiretap: false ## Default by false
        connectTimeout: 45_000 ## Default by 45s
        ## see:org.springframework.cloud.gateway.filter.NettyRoutingFilter#getResponseTimeout
        responseTimeout: 60_000 ## Default by 60s
        maxHeaderSize: 65535 ## Default no set.
        #maxInitialLineLength: ## Default by null
        #proxy:
        # host:
        # port:
        # username:
        # password:
        # non-proxy-hosts-pattern:
        pool:
          name: proxy ## Default by proxy
          #metrics: true ## Default by false
          #max-idle-time: 
          #acquire-timeout: 45000 # Default by 45000ms
        websocket:
          proxy-ping: true ## Default by true
          max-frame-payload-length: 65535 ## Default no set.
          #max-connections: ## Default by: max(availableProcessors(),8)*2)
        ssl: ## see:org.springframework.cloud.gateway.config.GatewayAutoConfiguration.NettyConfiguration#gatewayHttpClient()
          default-configuration-type: TCP ## Default by 'TCP'
          handshake-timeout: 10000ms ## Default by 10000ms
          close-notify-flush-timeout: 3000ms ## Default by 3000ms
          close-notify-read-timeout: 0 ## Default by 0
          #key-password: ${spring.cloud.gateway.httpclient.ssl.key-store-password}
          #key-store: ## Keystore path for Netty HttpClient.
          #key-store-type:
          #key-store-password:
          #key-store-provider:
          #trusted-x509-certificates:
          #use-insecure-trust-manager: true ## Default by false
      ## see:org.springframework.cloud.gateway.config.GatewayMetricsAutoConfiguration
      ## see:org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter
      ## see:org.springframework.cloud.gateway.filter.GatewayMetricsFilter
      metrics:
        enabled: true ## Default no-set.
        prefix: ISCG_gateway ## Default by 'spring.cloud.gateway'
        tags:
          application: ${spring.application.name}
          profiles.include: ${spring.profiles.include}
          profiles.active: ${spring.profiles.active}
      actuator:
        verbose:
          enabled: true ## Default by false

  ## ######################
  ## Infra configuration.
  ## ######################
  infra:
    ## Note: That disable generic logging for the infrastructure and enable special logging for the gateway.
    ## currently, the two implementations are almost identical, but in the future the gateway's logging
    ## may add special functionality.
    core.logging.enabled: false

  ## ######################
  ## ESCG gateway configuration.
  ## ######################
  escg:
    server:
      ssl-verifier:
        sni:
          enabled: true ## Default by true
          ## By build-in it will contains: [localhost,127.0.0.1]
          #hosts: []
        peer:
          enabled: true ## Default by true
          check-cn-host: true ## Default by true
          check-cn-white-file: classpath:/cert.d/cn_white.list ## Default no-set(disabled)
          #check-crl-file: classpath:/cert.d/revoked.crl ## Default no-set(disabled)
          allow-renegociate: true ## Default by true
    route:
      ## Enabled to https to http forward filter.
      forwaredHttpsToHttp: true ## Default by true
      refresh-delay-ms: 30_000 ## Default by 30_000
    ipfilter:
      defaultStrategy:
        ## When the white-list (allow) and the CIDR of the black-list (deny) conflict, whether the black-list(deny) has a higher priority.
        preferRejectOnCidrConflict: true ## Default by true
        ## The accept the request when neither the whitelist nor the blacklist match.
        acceptNotMatchCidr: true ## Default by true
        ## The allow all local addresses to pass.
        anyLocalAddressAllowed: true ## Default by true
        statusCode: FORBIDDEN ## Default by HttpStatus.FORBIDDEN
        forwardHeaderNames: ["X-Forwarded-For","Proxy-Client-IP","WL-Proxy-Client-IP","X-Real-IP","REMOTE_ADDR","Remote-Addr","RemoteAddr",
            "REMOTE_IP","Remote-Ip","RemoteIp","HTTP_X_FORWARDED_FOR","Http-X-Forwarded-For","HttpXForwardedFor","HTTP_X_FORWARDED","Http-X-Forwarded","HttpXForwarded",
            "HTTP_Client_IP","Http-Client-Ip","HttpClientIp","HTTP_X_CLUSTER_CLIENT_IP","Http-X-Cluster-Client-Ip","HttpXClusterClientIp","HTTP_FORWARDED_FOR",
            "Http-Forwarded-For","HttpForwardedFor","HTTP_VIA","Http-Via","HttpVia"]
        subnets:
          - allow: false ## Default by false
            cidrs: ['1.1.1.0/24'] ## Default by []
    fault:
      ## Prefer to enable tracing samples match SPEL match expression. Default by '#{true}', which means never no match.
      ## Tip: The built-in support to get the current routeId, such as: #{routeId.get().test('my-service-route')}
      preferOpenMatchExpression: '#{$defaultFaultHeader.test($request)}'
      ## Prefer to enable tracing samples match rule definitions.
      preferMatchRuleDefinitions:
        - name: defaultFaultHeader
          #method:
          #schema:
          #host:
          #port:
          #path: ## Ant path pattern.
          header:
            symbol: IGNORECASE_EQ ## Options(eq|prefix|suffix|include|ignorecase_eq|ignorecase_prefix|ignorecase_suffix|ignorecase_include)
            key: X-Escg-Fault
            value: y
          #cookie:
          #  symbol:
          #  key:
          #  value:
          #query:
          #  symbol:
          #  key:
          #  value:
      ## The name of the header that returns the fault injected configuration.
      faultInjectedHeader: X-Escg-Fault-Injected
      defaultInject:
        ## The enabled fault injector providers.
        provider: Abort ## Default by Abort, Optional(Abort|FixedDelay|RangeDelay)
        ## The request to abort fault injector configuration.
        abort:
          ## The percentage of requests that require fault injection match enabled.
          ## which is equivalent to another and condition after match the SPEL expression.
          percentage: 1d ## Default by 1.0d
          ## The HttpStatus returned when the fault strategy is meet.
          statusCode: 500 ## Default by 500
        ## The request to fixed delay fault injector configuration.
        fixedDelay:
          ## The percentage of requests that require fault injection match enabled.
          ## which is equivalent to another and condition after match the SPEL expression.
          percentage: 1d ## Default by 1.0d
          delayMs: 1000 ## fixed delay in milliseconds, Default by 1000
        ## The request to random range delay fault injector configuration.
        rangeDelay:
          ## The percentage of requests that require fault injection match enabled.
          ## which is equivalent to another and condition after match the SPEL expression.
          percentage: 1d ## Default by 1.0d
          minDelayMs: 1000 ## Default by 1000
          maxDelayMs: 5000 ## Default by 5000
    security:
      simpleSign:
        secretStore: redis
        secretStorePrefix: gateway:auth:sign:secret
        secretLocalCacheSeconds: 6 ## Default by 6sec
        ## Ignore authentication in JVM debug mode, often used for rapid development and testing environments.
        ## [NOTICE]: that this switch is only for dev testing and definitely not for production, known issue:
        ## when set to true, an error will be returned due to the rate-limiter filter this filter if the
        ## 'principalNameKeyResolver' is used (The default is 403 or 422), the reason is because the current
        ## authenticated principal name cannot be obtained.
        anonymousAuthingWithJvmDebug: false ## Default by false
        signReplayVerifyBloomLoadPrefix: gateway:auth:sign:replay:bloom
        eventRecorder:
          publishEventBusThreads: 1 ## Default by 1
          ## Based on whether the redis event logger enables logging, if it is turned on, it can be used as a downgrade
          ## recovery strategy when data is lost due to a catastrophic failure of the persistent accumulator.
          localLogEnabled: true ## Default by true
          redis:
            enabled: true ## Default by true
            ## Redis event recorder success accumulator prefix.
            successCumulatorPrefix: gateway:auth:sign:event:success
            ## Redis event recorder failure accumulator prefix.
            failureCumulatorPrefix: gateway:auth:sign:event:failure
            ## Redis event recorder accumulator suffix of date format pattern.
            cumulatorSuffixOfDatePattern: yyMMdd
    trace:
      enabled: true ## Default by true
      ## Prefer to enable tracing samples match SPEL match expression. Default by '#{true}', which means never no match.
      preferOpenMatchExpression: '#{$defaultTraceHeader.test($request)}'
      ## Prefer to enable tracing samples match rule definitions.
      preferMatchRuleDefinitions:
        - name: defaultTraceHeader
          #method:
          #schema:
          #host:
          #port:
          #path: ## Ant path pattern.
          header:
            symbol: IGNORECASE_EQ ## Options(eq|prefix|suffix|include|ignorecase_eq|ignorecase_prefix|ignorecase_suffix|ignorecase_include)
            key: X-Escg-Trace
            value: y
          #cookie:
          #  symbol:
          #  key:
          #  value:
          #query:
          #  symbol:
          #  key:
          #  value:
      ################################################
      ## @Deprecated, please using of prefix 'spring.sleuth.'
      #serviceName: ${spring.application.name}
      #exporter:
      #  provider: jaeger ## Default by jaeger, Options(otlp|jaeger|zipkin)
      #  otlp:
      #    ## Otlp gRPC/http receiver server endpoint. Default by 'http://localhost:4317'
      #    endpoint: http://localhost:4317
      #    timeoutMs: 10_000 ## Default by 10000ms
      #    headers: {} ## Default by {}
      #  jaeger:
      #    ## Jaeger gRPC/http receiver server endpoint. Default by 'http://localhost:14250'
      #    endpoint: http://localhost:14250
      #  zipkin:
      #    ## Zipkin gRPC/http receiver server endpoint. Default by 'http://localhost:9411/api/v2/spans'
      #    endpoint: http://localhost:9411/api/v2/spans
      #samper:
      #  ## The samper type, default by traceidratio, Options(always_on|parentbased_always_off|parentbased_always_on|parentbased_traceidratio|traceidratio)
      #  type: traceidratio
      #  ## The traceId ratio based sampler ratio. range of [0.0-1.0]
      #  ratio: 1.0d
      #bsp:
      #  ## The interval, in milliseconds, between two consecutive exports. Default is 5000ms.
      #  scheduleDelay: 5000
      #  ## The maximum queue size. Default is 2048.
      #  maxQueueSize: 2048
      #  ## The maximum batch size. Default is 512.
      #  maxExportBatchSize: 512
      #  ## The maximum allowed time, in milliseconds, to export data. Default is 30000ms.
      #  exportTimeout: 30000
      #spanLimits:
      #  ## otlp.span.attribute.count.limit, see:io.opentelemetry.sdk.trace.SpanLimitsBuilder#maxNumEvents
      #  maxNumEvents: 128
      #  ## otlp.span.link.count.limit, see:io.opentelemetry.sdk.trace.SpanLimitsBuilder#maxNumLinks
      #  maxNumLinks: 128
      #  ## otlp.span.attribute.count.limit, see:io.opentelemetry.sdk.trace.SpanLimitsBuilder#maxNumAttributes
      #  maxNumAttributes: 128
      #  ## see:io.opentelemetry.sdk.trace.SpanLimitsBuilder#maxNumAttributesPerEvent
      #  maxNumAttributesPerEvent: 128
      #  ## see:io.opentelemetry.sdk.trace.SpanLimitsBuilder#maxNumAttributesPerLink
      #  maxNumAttributesPerLink: 128
    logging:
      ## If this switch is enabled, then check whether the request header and parameters meet the current conditions for printing flight logs.
      ## If so, print according to the predetermined level, otherwise do not print. If this switch is set to false, printing logs will be
      ## permanently disabled (regardless of the request header). and whether the parameters meet the conditions).
      enabled: true ## Default by true
      ## The output default level of flight log printing, similar to kubectl design value range: 1-10, 1 is coarse-grained log, 10 is the most fine-grained log.
      defaultVerboseLevel: 10
      ## The request header name used to set the log output verbose level valid only for the current request, This value takes precedence over '#defaultVerboseLevel'
      verboseLevelRequestHeader: X-Escg-Log-Level ## Default by 'X-Escg-Log-Level'
      ## Sets the status header name of the dyed log request, which is used to notify the back-end services to enable log printing for the current request.
      setDyeingLogStateRequestHeader: X-Escg-Log-Dyeing-State ## Default by 'X-Escg-Log-Dyeing-State'
      ## In order to prevent the request body data from being too large, only the
      ## first small part of the body data is obtained.
      maxPrintRequestBodyLength: 1024 ## Default by 1024
      ## In order to prevent the response body data from being too large, only the
      ## first small part of the body data is obtained.
      maxPrintResponseBodyLength: 1024 ## Default by 1024
      ## Prefer to enable print logs match SPEL match expression. Default by '#{true}', which means never match.
      ## Tip: The built-in support to get the current routeId, such as: #{routeId.get().test('my-service-route')}
      preferOpenMatchExpression: '#{$defaultLogHeader.or($defaultLogQuery).or($energyOpenApiLogWithPath).test($request)}'
      ## Prefer to enable print logs match rules definition.
      preferMatchRuleDefinitions:
        - name: defaultLogHeader
          #method:
          #schema:
          #host:
          #port:
          #path: ## Ant path pattern.
          header:
            symbol: IGNORECASE_EQ ## Options(eq|prefix|suffix|include|ignorecase_eq|ignorecase_prefix|ignorecase_suffix|ignorecase_include)
            key: X-Escg-Log
            value: y
          #cookie:
          #  symbol:
          #  key:
          #  value:
          #query:
          #  symbol:
          #  key:
          #  value:
        - name: defaultLogQuery
          query:
            symbol: IGNORECASE_EQ
            key: __iscg_log
            value: y
        - name: energyOpenApiLogWithPath
          path: '/openapi/**'
    requestlimit:
      ## The get denial of Service when throttling key is empty.
      denyEmptyKey: true ## Default by true
      ## The status code response when the get current limiting key is empty.
      emptyKeyStatusCode: FORBIDDEN ## Default by HttpStatus.FORBIDDEN
      statusCode: TOO_MANY_REQUESTS ## Default by HttpStatus.TOO_MANY_REQUESTS
      defaultKeyResolver:
        #host: {}
        #path: {}
        #principal: {}
        interval:
          ## The date pattern of the key get by limiting according to the date interval.
          cycleDatePattern: yyMMdd ## Default by 'yyMMdd'
        header:
          ## The according to the list of header names of the request header current limiter, it can usually be used to get the
          ## actual IP after being forwarded by the proxy to limit the current, or it can be flexibly used for other purposes.
          headerNames: ["X-Forwarded-For","Proxy-Client-IP","WL-Proxy-Client-IP","X-Real-IP","REMOTE_ADDR","Remote-Addr","RemoteAddr",
            "REMOTE_IP","Remote-Ip","RemoteIp","HTTP_X_FORWARDED_FOR","Http-X-Forwarded-For","HttpXForwardedFor","HTTP_X_FORWARDED","Http-X-Forwarded","HttpXForwarded",
            "HTTP_Client_IP","Http-Client-Ip","HttpClientIp","HTTP_X_CLUSTER_CLIENT_IP","Http-X-Cluster-Client-Ip","HttpXClusterClientIp","HTTP_FORWARDED_FOR",
            "Http-Forwarded-For","HttpForwardedFor","HTTP_VIA","Http-Via","HttpVia"]
      limiter:
        rate:
          ## The rate limiter user-level configuration key prefix.
          configPrefix: gateway:requestlimit:config:rate
          ## The rate limiter user-level tokens computational key prefix.
          tokenPrefix: gateway:requestlimit:token:rate
          ## The name of the deny header that empty key got obtained.
          denyEmptyKeyHeader: X-Escg-RateLimit-Deny-EmptyKey ## Default by 'X-Escg-RateLimit-Deny-EmptyKey'
          ## The name of the header that returns the burst capacity configuration.
          burstCapacityHeader: X-Escg-RateLimit-Burst-Capacity ## Default by 'X-RateLimit-Burst-Capacity'
          ## The name of the header that returns the replenish rate configuration.
          replenishRateHeader: X-Escg-RateLimit-Replenish-Rate ## Default by 'X-RateLimit-Replenish-Rate'
          ## The name of the header that returns the requested tokens configuration.
          requestedTokensHeader: X-Escg-RateLimit-Requested-Tokens ## Default by 'X-RateLimit-Requested-Tokens'
          ## The name of the header that returns number of remaining requests during the current second.
          remainingHeader: X-Escg-RateLimit-Remaining ## Default by 'X-RateLimit-Remaining'
          ## The name of the header that returns number of limited key the current request.
          limitKeyHeader: X-Escg-RateLimit-LimitKey ## Default by 'X-Escg-RateLimit-LimitKey'
          ## The default strategy configuration of request limiter based on redis rate.
          defaultStrategy:
            ## The add the properties info of the current limiter to the response header.
            includeHeaders: true ## Default by true
            ## The default token bucket capacity, that is, the total number of concurrency allowed.
            burstCapacity: 1 ## Default by 1
            ## How many requests per second do you want a user to be allowed to do?
            replenishRate: 1 ## Default by 1
            ## How many tokens are requested per request?
            requestedTokens: 1 ## Default by 1
        quota:
          ## The quota limiter user-level configuration key prefix.
          configPrefix: gateway:requestlimit:config:quota
          ## The quota limiter user-level tokens computational key prefix.
          tokenPrefix: gateway:requestlimit:token:quota
          ## The name of the deny header that empty key got obtained.
          denyEmptyKeyHeader: X-Escg-QuotaLimit-Deny-EmptyKey ## Default by 'X-Escg-QuotaLimit-Deny-EmptyKey'
          ## The name of the header that returns the request capacity configuration.
          requestCapacityHeader: X-Escg-QuotaLimit-Request-Capacity ## Default by 'X-QuotaLimit-Request-Capacity'
          ## The name of the header that returns number of remaining requests during the current second.
          remainingHeader: X-Escg-QuotaLimit-Remaining ## Default by 'X-QuotaLimit-Remaining'
          ## The name of the header that returns the time cycle pattern of the request limiting.
          cyclePatternHeader: X-Escg-QuotaLimit-Cycle ## Default by 'X-Escg-QuotaLimit-Cycle'
          ## The name of the header that returns number of limited key the current request.
          limitKeyHeader: X-Escg-QuotaLimit-LimitKey ## Default by 'X-Escg-QuotaLimit-LimitKey'
          ## The default strategy configuration of request limiter based on redis quota.
          defaultStrategy:
            ## The add the properties info of the current limiter to the response header.
            includeHeaders: true ## Default by true
            ## The number of total maximum allowed requests capacity.
            requestCapacity: 1000 ## Default by 1000
            ## The date pattern of request quota limit calculation cycle.
            cycleDatePattern: yyMMdd ## Default by 'yyMMdd'
      eventRecorder:
        publishEventBusThreads: 1 ## Default by 1
        ## Based on whether the redis event logger enables logging, if it is turned on, it can be used as a downgrade
        ## recovery strategy when data is lost due to a catastrophic failure of the persistent accumulator.
        localLogEnabled: true ## Default by true
        redis:
          ## Event logging key prefix for redis based rate limiter.
          rateHitsCumulatorPrefix: gateway:requestlimit:event:hits:rate
          ## Event logging key prefix for redis based quota limiter.
          quotaHitsCumulatorPrefix: gateway:requestlimit:event:hits:quota
          ## Redis event recorder accumulator suffix of date format pattern.
          cumulatorSuffixOfDatePattern: yyMMdd ## Default by 'yyMMdd'
    traffic:
      defaultReplication:
        targetUrls: ["http://localhost:8888/"]
        ## The sampling percentage rate of traffic that needs to be replication.
        percentage: 1d ## Default by 1d
        wiretap: false ## Default by false
        connectTimeout: 45_000 ## Default by 45s
        ## see:org.springframework.cloud.gateway.filter.NettyRoutingFilter#getResponseTimeout
        responseTimeout: 60_000 ## Default by 60s
        maxHeaderSize: 65535 ## Default no set.
        #maxInitialLineLength: ## Default by null
        #proxy:
        # host:
        # port:
        # username:
        # password:
        # non-proxy-hosts-pattern:
        pool:
          name: proxy ## Default by proxy
          #metrics: true ## Default by false
          #max-idle-time: 
          #acquire-timeout: 45000 # Default by 45000ms
        websocket:
          proxy-ping: true ## Default by true
          max-frame-payload-length: 65535 ## Default no set.
          #max-connections: ## Default by: max(availableProcessors(),8)*2)
        ssl: ## see:org.springframework.cloud.gateway.config.GatewayAutoConfiguration.NettyConfiguration#gatewayHttpClient()
          default-configuration-type: TCP ## Default by 'TCP'
          handshake-timeout: 10000ms ## Default by 10000ms
          close-notify-flush-timeout: 3000ms ## Default by 3000ms
          close-notify-read-timeout: 0 ## Default by 0
          #key-password: ${spring.cloud.gateway.httpclient.ssl.key-store-password}
          #key-store: ## Keystore path for Netty HttpClient.
          #key-store-type:
          #key-store-password:
          #key-store-provider:
          #trusted-x509-certificates:
          #use-insecure-trust-manager: true ## Default by false
    responsecache:
      ## The name of the header that returns the request cached configuration.
      responseCachedHeader: X-Escg-Cached ## Default by 'X-Escg-Cached'
      ## The initial capacity of the temporary buffer size.
      tmpBufferInitialCapacity: 1024 ## Default by 1024
      ## The maximum capacity of the temporary buffer size.
      tmpBufferMaxCapacity: 1048576 ## Default by 1048576
      ## Prefer to enable request cache samples match SPEL match expression. Default by '#{true}', which means never no match.
      ## Tip: The built-in support to get the current routeId, such as: #{routeId.get().test('my-service-route')}
      preferOpenMatchExpression: '#{$defaultCacheHeader.test($request)}'
      ## Prefer to enable tracing samples match rule definitions.
      preferMatchRuleDefinitions:
        - name: defaultCacheHeader
          #method:
          #schema:
          #host:
          #port:
          #path: ## Ant path pattern.
          header:
            symbol: IGNORECASE_EQ ## Options(eq|prefix|suffix|include|ignorecase_eq|ignorecase_prefix|ignorecase_suffix|ignorecase_include)
            key: X-Escg-Cache
            value: y
          #cookie:
          #  symbol:
          #  key:
          #  value:
          #query:
          #  symbol:
          #  key:
          #  value:
      defaultCache:
        provider: SimpleCache ## Default by SimpleCache, options(SimpleCache|EhCache|RedisCache)
        simple:
          ## If you wish the cache should not exceed this number of entries, the cache will evict recently or infrequently
          ## used entries when it does, WARNING: the cache may evict entries before this limit is exceeded - usually
          ## when the cache size is close to the limit.
          maximumSize: 100_000 ## Default by 100_000
          ## The expiration interval based on write time, all cache entry reads and writes are updated.
          expireAfterAccessMs: 60_000 ## Default by 60_000
          ## The expiration interval based on access time, all cache entries are updated only by write operations.
          expireAfterWriteMs: 600_000 ## Default by 600_000
          ## The number of concurrent cache operations, that is, the number of underlying cache block/segment locks.
          concurrencyLevel: 4 ## Default by 4
        ehcache:
          ## The cached data elimination algorithm.
          eliminationAlg: LRU ## Default by LRU, options(LRU|LFU|FIFO)
          ## The cache name prefix.
          cacheNamePrefix: ResponseCache ## Default by 'requestCache'
          ## The number of entries not persisted to keep in memory.
          offHeapEntries: 100_000 ## Default by 100_000
          ## The number of data size not persisted to keep in memory. must be less than diskSize
          offHeapSize: 128MB ## Default by 128MB
          ## The number of total data size not persisted to keep in disk. must be greater than offHeapSize
          diskSize: 512MB ## Default by 512MB
        redis:
          cachePrefix: gateway:responsecache:data
          expireMs: 60_000
    ## see:https://github.com/spring-cloud/spring-cloud-gateway/issues/1370
    circuitbreaker:
      failureRateThreshold: 40 ## Default by 50
      permittedNumberOfCallsInHalfOpenState: 10 ## Default by 10
      slidingWindowSize: 100 ## Default by 100
      slidingWindowType: COUNT_BASED ## Default by COUNT_BASED, Optional(TIME_BASED|COUNT_BASED)
      minimumNumberOfCalls: 100 ## Default by 100
      writableStackTraceEnabled: true ## Default by true
      automaticTransitionFromOpenToHalfOpenEnabled: false ## Default by false
      waitIntervalFunctionInOpenState: 60 ## Default by 60s
      slowCallRateThreshold: 100 ## Default by 100
      slowCallDurationThreshold: 60 ## Default by 60
      timeLimiter:
        timeoutDuration: 10_000 ## Default by 1000ms
        cancelRunningFuture: true ## Default by true
    loadbalancer:
      enabled: true ## Default by true
      canaryDiscoveryServiceLabelPrefix: Escg-Canary-Label ## Default by 'Escg-Canary-Label'
      # TODO
      #canaryChooseExpression: '#{$rule.and($defaultZoneHeader).test($request)}'
      ## The SPEL expressions that match canary requests.
      canaryChooseExpression: '#{$rule.test($request)}'
      canaryMatchRuleDefinitions:
        ## TODO 
        #- name: defaultZoneHeader
        #  query:
        #    symbol: IGNORECASE_EQ
        #    key: X-Escg-Zone
        #    value: cn_south1_a1
        - name: v1-canary-header
          #method:
          #schema:
          #host:
          #port:
          #path: ## Ant path pattern.
          header:
            symbol: IGNORECASE_EQ ## Options(eq|prefix|suffix|include|ignorecase_eq|ignorecase_prefix|ignorecase_suffix|ignorecase_include)
            key: X-Escg-Canary
            value: v1
          #cookie:
          #  symbol:
          #  key:
          #  value:
          #query:
          #  symbol:
          #  key:
          #  value:
        - name: v1-canary-query
          query:
            symbol: EQ
            key: __iscg_canary
            value: v1
      ## The number of load balancer statistician scheduler worker threads.
      statsSchedulerThread: 2 ## Default by 2
      ## The initial interval at which the instance list is periodically pulled update register from the discovery service.
      registerRouteServicesInitialSeconds: 1 ## Default by 1s
      ## The interval at which the instance list is periodically pulled update register from the discovery server.
      registerRouteServicesDelaySeconds: 60 ## Default by 60s
      defaultChoose: ## see:com.wl4g.iam.gateway.loadbalance.CanaryLoadBalancerFilterFactory#applyGlobalToConfig()
        ## When no canary condition is matched, whether all instances of the service are candidates.
        fallback-all-to-candidates: true
        load-balancer-algorithm: LC ## Optional(R|RR|WR|WRR|DH|SH|LC|LT|WLC|WLT)
        max-choose-tries: 10 ## Default by 10
        null-ping-to-reachable: true ## Default by true
      defaultProbe: ## see:com.wl4g.iam.gateway.loadbalance.CanaryLoadBalancerFilterFactory#applyGlobalToConfig()
        debug: false ## Default by false
        initialSeconds: 3 ## Default by 3s
        delaySeconds: 10 ## Default by 10s
        timeoutMs: 5_000 ## Default by 5_000ms
        receiveQueue: 8 ## Default by 8
        path: /healthz ## Default by '/healthz'
        ## Note: only expectBody takes effect when it is set at the same time as expectBody. (As long as any
        ## status code is satisfied)
        expectStatuses: [200] ## Default by 200
        #expect-body: ## Default by ''

  ## ######################
  ## Security configuration.
  ## ######################
  security:
    oauth2:
      client:
        provider:
          keycloak:
            issuer-uri: https://wl4g.com/realms/master
        registration:
          keycloak:
            client-id: portal
            client-secret: a12463984c2f46bdb83d9b1313f3378d
            scope:
              - email
              - profile
              - roles

## ######################
## Actuator management
## ######################
management:
  server:
    port: 10108
  security:
    enabled: false
  endpoint:
    gateway:
      enabled: true ## Default by true
  endpoints:
    web:
      exposure:
        include: '*'
  metrics:
    export:
      ## see:org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusMetricsExportAutoConfiguration
      prometheus:
        enabled: true ## Default by true

## ######################
## Logging configuration.
## ######################
## see:https://docs.spring.io/spring-boot/docs/2.6.7/reference/htmlsingle/#features.logging.custom-log-configuration
## see:com.wl4g.infra.core.logging.custom.logback.CustomLogbackConfigurer
logging:
  register-shutdown-hook: false
  charset.file: UTF-8
  ## Log levels belonging to this group will take effect synchronously.(TRACE|DEBUG|INFO|WARN|ERROR|FATAL|OFF)
  ## see:https://docs.spring.io/spring-boot/docs/2.6.7/reference/htmlsingle/#features.logging.log-groups
  group:
    config: "org.springframework.boot.context.config"
    tomcat: "org.apache.catalina,org.apache.coyote,org.apache.tomcat"
  file: ## see:org.springframework.boot.logging.LogFile#toString
    name: /mnt/disk1/log/${spring.application.name}/${spring.application.name}.log
  pattern:
    console: '%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID:- }){magenta} %clr(---){faint} [%clr(${spring.application.name})] [%clr(%-12.12X{principal})] [%clr(%-32.32X{traceId})] [%clr(%-8.8X{spanId})] %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx'
    file: '%d{yyyy-MM-dd HH:mm:ss.SSS} %5p ${PID:- } [${spring.application.name}] [%-12.12X{principal}] [%-32.32X{traceId}] [%-8.8X{spanId}] --- [%t] %-40.40logger{39} : %m%n%wEx'
    dateformat: yyyy-MM-dd HH:mm:ss.SSS
    level: '%5p'
  logback:
    rollingpolicy:
      file-name-pattern: ${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz
      clean-history-on-start: false ## Default by false
      max-file-size: 1GB ## Default by 200MB
      max-history: 30 ## Default by 7
      total-size-cap: 100GB ## Default by 10GB
  level:
    root: INFO
    tomcat: INFO
    config: INFO
    ## The built-in log groups:
    ## web(org.springframework.core.codec,org.springframework.http,org.springframework.web,org.springframework.boot.actuate.endpoint.web,org.springframework.boot.web.servlet.ServletContextInitializerBeans)
    ## sql(org.springframework.jdbc.core,org.hibernate.SQL,org.jooq.tools.LoggerListener)
    web: INFO
    sql: INFO
    reactor:
      netty.http.client: INFO
    org:
      springframework: INFO
      apache: INFO
    feign: DEBUG
    com:
      wl4g.iam.gateway: INFO

## ######################
## Server configuration.
## ######################
server: ## see:org.springframework.boot.autoconfigure.web.ServerProperties
  port: 18085
  address: 0.0.0.0
  compression:
    enabled: true
  http2:
    enabled: ${server.ssl.enabled} ## Default by false
  #netty:
  #  connection-timeout: 
  ## see:https://github.com/netty/netty/issues/832
  ## see:https://docs.oracle.com/javase/7/docs/technotes/guides/security/jsse/ReadDebug.html
  ## see:https://docs.spring.io/spring-boot/docs/current/reference/html/howto.html#howto-configure-ssl
  ## see:https://github.com/spring-projects/spring-boot/blob/v2.6.6/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/Ssl.java
  ## see:org.springframework.boot.web.embedded.netty.SslServerCustomizer#apply()
  ## see:io.netty.handler.ssl.SslContext#defaultProvider()
  ## see:io.netty.handler.ssl.SslHandler
  ## Example: curl -v --cacert ca.pem --cert client1.pem --key client1-key.pem 'https://localhost:18085/v2/hello?appId=oi554a94bc416e4edd9ff963ed0e9e25e6c10545&nonce=vV5Y0Sf2DCNPnjCB&timestamp=1649477512798&signature=66aeaa14cb229d9f9b54cd71e59f8df4bbd511c039977b9149a25db7ca848065&response_type=json'
  ssl:
    enabled: false ## Default by false
    protocol: TLS ## Default by 'TLS'
    client-auth: NEED ## Default no set. Options(NONE|WANT|NEED)
    ## see:https://github.com/openjdk/jdk/blob/master/src/java.base/share/classes/sun/security/ssl/ProtocolVersion.java
    ## issue:https://bugs.openjdk.java.net/browse/JDK-8221218
    enabled-protocols: ['TLSv1', 'TLSv1.1', 'TLSv1.2', 'TLSv1.3'] ## Default no-set. Options(SSLv3|TLSv1|TLSv1.1|TLSv1.2|TLSv1.3)
    ## see:https://github.com/openjdk/jdk/blob/master/src/java.base/share/classes/sun/security/ssl/CipherSuite.java
    ## see:https://github.com/openjdk/jdk/blob/jdk8-b120/jdk/src/share/classes/sun/security/ssl/CipherSuite.java
    ## see:io.netty.handler.ssl.OpenSslKeyMaterialManager#KEY_TYPES
    ## issue:https://www.cnblogs.com/wade-luffy/p/6019743.html
    #ciphers:
    #  - TLS_DHE_RSA_WITH_AES_128_CBC_SHA256
    #  - TLS_DHE_DSS_WITH_AES_128_CBC_SHA256
    #  - TLS_RSA_WITH_AES_128_CBC_SHA256
    #  - TLS_DHE_RSA_WITH_AES_128_CBC_SHA
    #  - TLS_DHE_DSS_WITH_AES_128_CBC_SHA
    #  - TLS_RSA_WITH_AES_128_CBC_SHA
    key-password: ${server.ssl.key-store-password}
    key-store: classpath:cert.d/wl4g.io.p12
    key-store-password: '123456'
    key-store-type: PKCS12 ## Default no-set by JKS. Options(JKS|PKCS12|DER|CER|..)
    #key-store-provider:
    trust-store: classpath:cert.d/ca.p12
    trust-store-password: '123456'
    trust-store-type: PKCS12
    #trust-store-provider:
